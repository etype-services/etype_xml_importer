<?php

/**
 * Implements hook_permission().
 */
function etype_xml_importer_permission() {
  return array(
    'administer xml import' => array(
      'title' => t('Administer XML Import'),
    )
  );
}

/**
 * @return array
 * Create custom VBO action
 */
function etype_xml_importer_action_info() {
  return [
    'etype_xml_importer_add_nodes' => [
      'type' => 'node',
      'label' => t('Add nodes to section'),
      'configurable' => FALSE,
      'triggers' => ['any'],
    ],
  ];
}

/**
 * @param $node
 * @param $context
 * Function attached to custom action to store selected node ids
 */
function etype_xml_importer_add_nodes(&$node, $context) {
  $query = new EntityFieldQuery;
  $result = $query
    ->entityCondition('entity_type', 'taxonomy_term')
    ->propertyCondition('name', 'Obituaries')
    ->execute();
  var_dump($result);
  exit;
  $type = variable_get('etype_xml_node_type');
  $fields = field_info_instances("node", $type);
  if (array_key_exists('field_section', $fields)) {
    $node->field_section['und'][0] = array('tid' => $term->tid);
  } else {
    $node->field_category['und'][0] = array('tid' => $term->tid);
  }
  node_save($node);
}

/**
 * add import and admin urls
 * @return array
 */
function etype_xml_importer_menu() {

  $items = array();

  $items['import_olive_xml'] = array(
    'title' => 'Import Olive XML',
    'description' => 'Olive XML Importer',
    'page callback' => 'etype_xml_importer_olive_import',
    'access arguments' => array('administer xml import'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/xml_importer.import.inc'
  );

  $items['admin/config/etype/etype_xml_importer/settings'] = array(
    'title' => 'XML Importer Settings',
    'description' => 'XML content import options.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('etype_xml_importer_admin'),
    'access arguments' => array('administer xml import'),
    'file' => 'includes/xml_importer.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );


  return $items;
}

/**
 * Cron Jobs
 * @param $op
 * @param null $job
 * @return mixed
 */
function etype_xml_importer_cronapi($op, $job = NULL) {
  $xml_cron_schedule = variable_get('etype_xml_cron_schedule');
  if (!empty($xml_cron_schedule)) {
    /* Classified importer */
    $items['etype_xml_importer_cron'] = array(
      'description' => 'Import content via XML from Olive',
      'rule' => $xml_cron_schedule,
      'callback' => 'etype_xml_importer_olive_import',
      'file' => 'includes/xml_importer.import.inc'
    );
    return $items;
  }
}
